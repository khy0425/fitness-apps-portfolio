name: Fitness Apps Portfolio CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.24.x'

jobs:
  test:
    name: Test Flutter Apps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [
          squat_master,
          gigachad_runner,
          burpeebeast,
          jumpingjackjedi,
          pulluppro,
          lungelegend,
          plankchampion,
          mission100_v3
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get dependencies - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          flutter pub get

      - name: Analyze code - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          flutter analyze

      - name: Run tests - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          flutter test

      - name: Check formatting - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          dart format --set-exit-if-changed .

  build-android:
    name: Build Android APKs
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        app: [
          squat_master,
          gigachad_runner,
          burpeebeast,
          jumpingjackjedi,
          pulluppro,
          lungelegend,
          plankchampion,
          mission100_v3
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Get dependencies - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          flutter pub get

      - name: Build APK - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          flutter build apk --release

      - name: Upload APK artifact - ${{ matrix.app }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-apk
          path: flutter_apps/${{ matrix.app }}/build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    name: Build iOS Apps
    runs-on: macos-latest
    needs: test
    strategy:
      matrix:
        app: [
          squat_master,
          gigachad_runner,
          burpeebeast,
          jumpingjackjedi,
          pulluppro,
          lungelegend,
          plankchampion,
          mission100_v3
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get dependencies - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          flutter pub get

      - name: Install CocoaPods
        run: |
          cd flutter_apps/${{ matrix.app }}/ios
          pod install

      - name: Build iOS - ${{ matrix.app }}
        run: |
          cd flutter_apps/${{ matrix.app }}
          flutter build ios --release --no-codesign

  build-web:
    name: Build Web Apps
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Build all web apps
        run: |
          for app in squat_master gigachad_runner burpeebeast jumpingjackjedi pulluppro lungelegend plankchampion mission100_v3; do
            echo "Building web for $app"
            cd flutter_apps/$app
            flutter pub get
            flutter build web --release
            cd ../..
          done

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./flutter_apps/squat_master/build/web

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: [build-android]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Run performance tests
        run: |
          for app in squat_master gigachad_runner burpeebeast jumpingjackjedi; do
            echo "Performance testing $app"
            cd flutter_apps/$app
            flutter pub get
            flutter test --reporter=json > test_results.json || true
            cd ../..
          done

      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        with:
          name: performance-reports
          path: flutter_apps/*/test_results.json

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security scan
        uses: securecodewarrior/github-action-bandit@v1
        with:
          args: '-r flutter_apps/ -f json -o security-report.json'

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.json

  play-store-deploy:
    name: Deploy to Play Store
    runs-on: ubuntu-latest
    needs: [build-android, performance-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    strategy:
      matrix:
        app: [squat_master, gigachad_runner, burpeebeast, jumpingjackjedi]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.app }}-apk
          path: ./apks/

      - name: Deploy to Play Store Internal Testing
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.fitnessapps.${{ matrix.app }}
          releaseFiles: ./apks/app-release.apk
          track: internal
          status: completed

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [test, build-android, build-ios, build-web]
    if: always()

    steps:
      - name: Notify Slack on Success
        if: needs.test.result == 'success' && needs.build-android.result == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#fitness-apps-ci'
          text: |
            ✅ Fitness Apps Portfolio CI/CD Successful!

            📱 All 8 apps built successfully
            🧪 Tests passed
            🚀 Ready for deployment
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#fitness-apps-ci'
          text: |
            ❌ Fitness Apps Portfolio CI/CD Failed!

            Please check the GitHub Actions logs for details.
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  analytics:
    name: Analytics & Reporting
    runs-on: ubuntu-latest
    needs: [build-android]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate build report
        run: |
          echo "# Fitness Apps Build Report" > build-report.md
          echo "Date: $(date)" >> build-report.md
          echo "Commit: ${{ github.sha }}" >> build-report.md
          echo "" >> build-report.md
          echo "## Apps Built Successfully:" >> build-report.md
          echo "- ✅ Squat Master" >> build-report.md
          echo "- ✅ GigaChad Runner" >> build-report.md
          echo "- ✅ Burpee Beast" >> build-report.md
          echo "- ✅ Jumping Jack Jedi" >> build-report.md
          echo "- ✅ Pullup Pro" >> build-report.md
          echo "- ✅ Lunge Legend" >> build-report.md
          echo "- ✅ Plank Champion" >> build-report.md
          echo "- ✅ Mission100 V3" >> build-report.md

      - name: Upload build report
        uses: actions/upload-artifact@v4
        with:
          name: build-report
          path: build-report.md